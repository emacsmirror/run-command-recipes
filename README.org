* Package =emacs-run-command-recipes=
  :PROPERTIES:
  :CUSTOM_ID: package-emacs-run-command-recipes
  :END:
  [[https://melpa.org/#/run-command-recipes][[[https://melpa.org/packages/run-command-recipes-badge.svg]]]]

  This is collection of recipes to [[https://github.com/bard/emacs-run-command][run-command]].
  
** Table of Contents                                                    :TOC:
- [[#package-emacs-run-command-recipes][Package =emacs-run-command-recipes=]]
  - [[#install][Install]]
  - [[#usage][Usage]]
  - [[#contribute][Contribute]]

** Install
   :PROPERTIES:
   :CUSTOM_ID: install
   :END:
   Melpa has =emacs-run-command-recipes= called as
   =run-command-recipes=, so if you use =use-package=, then just paste
   followed code to you config:

   #+BEGIN_SRC emacs-lisp
     (use-package run-command-recipes
         :ensure t :after (run-command)
         :init (run-command-recipes-use-all))
   #+END_SRC

   Or manually:

   #+BEGIN_SRC emacs-lisp
     (add-to-list 'load-path "~/.emacs.d/site-lisp/emacs-run-command-recipes")

     (require 'run-command-recipes)
     (run-command-recipes-use-all)
   #+END_SRC

** Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:
   If you need to use all supported language, just put this to your
   code:

   #+begin_src emacs-lisp
     (run-command-recipes-use-all)
   #+end_src

   If you need to use only special languages, just put this:

   #+begin_src emacs-lisp
     (run-command-recipes-use latex pandoc)
   #+end_src

   Also Instead of =LaTeX= and =pandoc= you can use something from
   this:

- =latex= ([[file:docs/latex.org][link on support]])
- =pandoc= ([[file:docs/pandoc.org][link on support]])
- =haskell= ([[file:docs/haskell.org][link on support]])
- =elisp= ([[file:docs/elisp.org][link on support]])
- =rust= ([[file:docs/rust.org][link on support]])
- =python= ([[file:docs/python.org][link on support]])

** Contribute
   :PROPERTIES:
   :CUSTOM_ID: contribute
   :END:
   All contribution is good.  For add recipe to this repository:

1. [[https://docs.github.com/en/get-started/quickstart/fork-a-repo][fork]] this repository
2. Create file with name =run-command-recipes-<recipe-name>.el= instead
   of =recipe-name= put name of your new recipe
3. Create in its function recipe for =run-command= with name
   =run-command-recipes-<recipe-name>=
4. Open =run-command-recipes.el= and add =recipe-name= to
   =run-command-recipes-supported-recipes= variable (this is requres
   for =run-command-recipes-use-all=)
5. Suggest use =run-command-recipes-project=, this package has function
   =run-command-recipes-project-root= which return root root of
   current project
6. Commit, Commit, Push all to your fork
7. [[https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests][Pull Request]] to this repository

