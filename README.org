* Package =emacs-run-command-recipes=
  :PROPERTIES:
  :CUSTOM_ID: package-emacs-run-command-recipes
  :END:
  [[https://melpa.org/#/run-command-recipes][file:https://melpa.org/packages/run-command-recipes-badge.svg]]
  [[file:https://github.com/semenInRussia/emacs-run-command-recipes/actions/workflows/eldev-lint.yml/badge.svg]]

  This is collection of recipes to [[https://github.com/bard/emacs-run-command][run-command]].

** Table of Contents                                                    :TOC:
- [[#package-emacs-run-command-recipes][Package =emacs-run-command-recipes=]]
  - [[#install][Install]]
  - [[#about-the-new-version-of-the-run-command][About the new version of the ~run-command~]]
  - [[#usage][Usage]]
  - [[#contribute][Contribute]]

** Install
   :PROPERTIES:
   :CUSTOM_ID: install
   :END:

   Melpa has =emacs-run-command-recipes= called =run-command-recipes=,
   so if you use =use-package=, then just put the following code to
   your Emacs config:

   #+BEGIN_SRC emacs-lisp
     (use-package run-command-recipes
       :ensure t
       :after (run-command)
       :init (run-command-recipes-use-all))
   #+END_SRC

   Or without =use-package=:

   #+BEGIN_SRC emacs-lisp
     (add-to-list 'load-path "~/.emacs.d/site-lisp/emacs-run-command-recipes")

     (require 'run-command-recipes)
     (run-command-recipes-use-all)
   #+END_SRC

** About the new version of the ~run-command~

Now maintainer of the ~run-command~ rewrite your creation and use for
it branch with name ~develop~ (here [[https://bard.github.io/emacs-run-command/][details]]), suggest use it, but if
you can't then add the following source code before call ~run-command-recipes-use-all~

#+BEGIN_src emacs-lisp

  (add-to-list 'run-command-experiments
               'run-command-experiment-lisp-commands)

#+END_src

** Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:

   If you're going to use all supported languages, just put following
   to your Emacs configuration:

   #+begin_src emacs-lisp
     (run-command-recipes-use-all)
   #+end_src

   If you're going to use only some special languages, just put
   the followIing:

   #+begin_src emacs-lisp
     (run-command-recipes-use latex pandoc)
   #+end_src

   Also, Instead of =LaTeX= and =pandoc= you can use anything from
   following list:

- =python= ([[file:docs/python.org][link on support]])
- =pandoc= ([[file:docs/pandoc.org][link on support]])
- =latex= ([[file:docs/latex.org][link on support]])
- =elisp= ([[file:docs/elisp.org][link on support]])
- =rust= ([[file:docs/rust.org][link on support]])
- =c= ([[file:docs/c.org][link on support]])
- =cpp= ([[file:docs/cpp.org][link on support]])
- =haskell= ([[file:docs/haskell.org][link on support]])
- =csharp= ([[file:docs/csharp.org][link on support]])
- =java= ([[file:docs/java.org][link on support]])
- =racket= ([[file:docs/racket.org][link on support]])

** Contribute
   :PROPERTIES:
   :CUSTOM_ID: contribute
   :END:
   All contribution is good.  For add recipe to this repository (here
   you should read =<recipe-name>= as name of your recipe):

1. [[https://docs.github.com/en/get-started/quickstart/fork-a-repo][Fork]] this repository
2. Run the Emacs command =run-command-recipes-create-recipe=.  It
   modify =README.org= (update the list of supported modes) and
   =run-command-recipes.el= (the list of supported modes in the
   commentaries and the source code), also it create some files:

   1. =<recipe-name>.org= for documentation of the new recipe
   2. =run-command-recipes-<recipe-name>.el= for source code

3. In =run-command-recipes-<recipe-name>.el= you may find the function,
   change this function (see offical [[https://github.com/bard/emacs-run-command#cookbook][cookbook]] of =run-command=)
4. Suggest you use some functions from the standard library of this
   project (see details [[file:docs/lib.org][here]])
5. Commit, Commit, Push all changes to your fork
6. Make [[https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests][Pull Request]] of your repo to main repository
