* =run-command='s Recipe for C
  :PROPERTIES:
  :CUSTOM_ID: run-commands-recipe-for-recipe-name
  :END:

** Table of Contents                                                    :TOC:
- [[#run-commands-recipe-for-c][=run-command='s Recipe for C]]
  - [[#commands][Commands]]
  - [[#customization][Customization]]
    - [[#detection][Detection]]
    - [[#turn-off-subrecipes][Turn off subrecipes]]

** Commands
   :PROPERTIES:
   :CUSTOM_ID: commands
   :END:

   Here the list of commands for =C= (4 commands, by my count):

   - Compile and Execute Current file via =gcc=
   - Compile Only Current file via =gcc=
   - Compile and Execute Current file via =clang=
   - Compile Only Current file via =clang=
   
** Customization
   :PROPERTIES:
   :CUSTOM_ID: customization
   :END:

*** Detection
    You can customize detection of =c= recipe.  This recipe work only
    when function =run-command-recipes-c-p= return t, you can look on
    current imlementation and make something new.

*** Turn off subrecipes
    By default, this recipe contains 2 subrecipes:

    - =run-command-recipes-c-gcc= (for =gcc= compiler)
    - =run-command-recipes-c-clang= (for =clang= compiler)

    Each of subrecipes work only when current computer has special
    executable file, so if you haven't installed =clang= subrecipe for
    =clang= won't work.

    If you want to turn off one of subrecipes, just use followed code:

    #+BEGIN_SRC emacs-lisp
      (setq run-command-recipes-c-subrecipes
            (-remove-item 'run-command-recipes-c-clang
                          run-command-recipes-c-subrecipes))
    #+END_SRC

    (here instead of =run-command-recipes-c-clang= you may insert
    anything other)


