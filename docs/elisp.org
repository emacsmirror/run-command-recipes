* Elisp recipe
  :PROPERTIES:
  :CUSTOM_ID: elisp-recipe
  :END:

** Table of Contents         :TOC:
- [[#elisp-recipe][Elisp recipe]]
  - [[#commands][Commands]]
  - [[#customization][Customization]]
    - [[#detect-elisp][Detect Elisp]]
    - [[#cask][Cask]]
    - [[#turn-off-subrecipes][Turn off Subrecipes]]

** Commands
   :PROPERTIES:
   :CUSTOM_ID: commands
   :END:
This recipe support 4 commands, the following command is first:

- Compile/ReCompile to Bytes This File

  ... that means: If the file was compiled already earlier then compile, otherwise recompile

- ReCompile to Bytes Current Directory

  
  ... that works only when root project directory contains one of
  =run-command-recipes-elisp-cask-filename= (by default Cask)

- Install Cask's Dependicies

  ... that works only when root project directory contains one of
  =run-command-recipes-elisp-cask-filename= (by default Cask)

- Run One ERT test
- Run All ERT Tests

  That works if the project root directory has directory ~tests~ (customize the directory name in variable ~run-command-recipes-elisp-ert-tests-directory~)

  - View ~Eldev~ archives
- Upgrade ~Eldev~ Project
- View ~Eldev~ targets
- Build Main ~Eldev~ targets
- Build ~Eldev~ Targets of Each Set
- Build the ~Eldev~ Package
- Byte-compile ~Eldev~ Project Files
- Byte-compile Current ~Eldev~ File of Project
- Clean Current ~Eldev~ Project
- Run Tests of the ~Eldev~ Project
- Run Tests from Current Test File with ~Eldev~
- Run Tests of Current ~Eldev~ Project, until Some Fails
- Run Failed Tests of Current ~Eldev~Project
- Run New Tests of Current ~Eldev~Project
- Lint Current ~Eldev~ Project

  ... that works only when the root project has the file ~Eldev~! Amazing!
** Customization
   :PROPERTIES:
   :CUSTOM_ID: customization
   :END:
*** Detect Elisp
:PROPERTIES:
    :CUSTOM_ID: detect-elisp
    :END:

=run-command-recipes-elisp-modes=. If you very need to support =special mode=, which must-have =run-command-recipes= commands, then use the following snippet:

#+begin_src emacs-lisp
  (add-to-list 'run-command-recipes-elisp-modes 'special-mode)
#+end_src 

Or set =run-command-recipes-mode-p-function= to special function, this function must not take arguments and return non-nil value, when current mode needs to have =run-command-recipes-elisp= commands

*** Cask
:PROPERTIES:
    :CUSTOM_ID: cask
    :END:

~run-command-recipes-elisp-cask-filename~.  If you want to change to "Cask.el" of Main file of Cask, just use this:

#+begin_src
(setq run-command-recipes-elisp-cask-filename "Cask.el")
#+end_src

Or set =run-command-recipes-cask-project-p-function= to special function, this function must not take arguments and return non-nil value, when current mode is have Cask ### ERT =run-command-recipes-elisp-ert-tests-directory= is name of directory is which place of ERT tests. Defaults to =test=. =run-command-recipes-elisp-has-ert-tests-p-function= is function which return t, when current project has ERT tests

*** Eldev
:PROPERTIES:
:ID:       a38081dd-7432-45a1-b260-45e4c7e3a675
:END:

See the following function if you need to customize:

- ~run-command-recipes-elisp-eldev-project-p~

*** Turn off Subrecipes
:PROPERTIES:
:ID:       623567af-5352-4155-b904-3975d9ad75a5
:END:

By default, this recipe has 3 subrecipes:

- ~run-command-recipes-elisp-cask~
- ~run-command-recipes-elisp-ert~
- ~run-command-recipes-elisp-virgin~
- ~run-command-recipes-elisp-eldev~
- ~run-command-recipes-elisp-eask~

You can disable any from them changing the variable ~run-command-recipes-elisp-subrecipes~
